package com.capstone.mobilestore.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.capstone.mobilestore.entity.RegistrationRequest;
import com.capstone.mobilestore.entity.User;
import com.capstone.mobilestore.service.UserServiceImpl;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/user")
public class UserController {

	 @Autowired
	    private UserServiceImpl userService;

	 @PostMapping("/register")
	    public ResponseEntity<User> registerUser(@Valid @RequestBody RegistrationRequest request) {
	        // Validate password
	        if (!isValidPassword(request.getPassword())) {
	            return ResponseEntity.badRequest().body(null); // Respond with a meaningful error message
	        }

	        // Register user based on role
	        switch (request.getRole().toLowerCase()) {
	            case "admin":
	                return ResponseEntity.status(HttpStatus.CREATED).body(userService.registerAdmin(request.getUsername(), request.getPassword()));
	            case "customer":
	                return ResponseEntity.status(HttpStatus.CREATED).body(userService.registerCustomer(request.getUsername(), request.getPassword()));
	            default:
	                return ResponseEntity.badRequest().body(null); // Handle unknown roles
	        }
	    }

	    // Custom method to validate password
	    private boolean isValidPassword(String password) {
	        // Implement your password validation logic here
	        // For example, check length and required characters
	        if (password.length() < 8) {
	            return false;
	        }
	        // You can add more validation rules here as needed
	        return true;
	    }

}
