package com.capstone.mobilestore.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.capstone.mobilestore.entity.Role;
import com.capstone.mobilestore.entity.User;
import com.capstone.mobilestore.exception.ResourceNotFoundException;
import com.capstone.mobilestore.repository.UserRepository;

@Service
public class UserServiceImpl implements UserService{
	
	@Autowired
	private UserRepository userRepository;
	
	@Autowired
    private PasswordEncoder passwordEncoder;

	@Override
	public User registerAdmin(String username, String password) {
		return registerUser(username, password, Role.ADMIN);
	}

	@Override
	public User registerCustomer(String username, String password) {
		 return registerUser(username, password, Role.CUSTOMER);
	}
	
	 private User registerUser(String username, String password, Role role) {
	        if (userRepository.existsByUsername(username)) {
	            throw new IllegalStateException("Username already exists!");
	        }
	        User newUser = new User();
	        newUser.setUsername(username);
	        newUser.setPassword(passwordEncoder.encode(password));
	        newUser.setRole(role);
	        return userRepository.save(newUser);
	    }

	    @Override
	    public Optional<User> getUserByUsername(String username) {
	        Optional<User> optionaluser = userRepository.f(username);
	        if(optionaluser.isEmpty()) {
	        	throw new ResourceNotFoundException();
	        }
	        return null;
	                
	    }

}
